#In this personal project, I crafted SQL queries to demonstrate proficiency in data manipulation and retrieval techniques.
#I emphasized advanced functions such as JOIN, LIKE, DISTINCT, SUM(), and MAX() to analyze sales data and identify top-performing agents.
#From filtering customers by country to dissecting invoice details, each query offers a glimpse into effective database querying and analysis skills.

--1. What 3 genres of music has the most albums?


SELECT genres.Name AS Genre, COUNT(DISTINCT albums.AlbumId) AS AlbumCount
FROM genres
JOIN tracks ON genres.GenreId = tracks.GenreId
JOIN albums ON tracks.AlbumId = albums.AlbumId
GROUP BY genres.Name
ORDER BY AlbumCount DESC
LIMIT 3;

------Explanation:
--Join genres to tracks: This ensures we count tracks that belong to a genre.
--Join tracks to albums: This ensures we count albums that have those tracks.
--Count distinct albums: This prevents double-counting albums that have multiple tracks in the same genre.
--Group by genre name: This aggregates the album count per genre.
--Order by album count descending: This sorts the genres by the number of albums in descending order.
--Limit to top 3: This limits the result to the top three genres.

--2. List all of the tracks for a given genre.

SELECT tracks.Name AS tracknames
FROM tracks
JOIN genres
ON tracks.GenreId=genres.GenreId
WHERE genres.Name= 'Rock'

--Explanation: This query joins the tracks and genres tables on the GenreId column and filters the results to only show tracks in the 'Rock' genre.


--3. Find the total number of invoices generated by each employee.


SELECT employees.FirstName, employees.LastName, COUNT(invoices.InvoiceId) AS TotalInvoices
FROM employees
JOIN customers ON employees.EmployeeId = customers.SupportRepId
JOIN invoices ON customers.CustomerId = invoices.CustomerId
GROUP BY employees.FirstName, employees.LastName;


--4. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").

SELECT CustomerID, FirstName, LastName, Country
FROM customers
WHERE Country<>'USA'

--5. Show only the Customers from Brazil.

SELECT DISTINCT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country='Brazil'

--6. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT inv.InvoiceId, cust.FirstName, cust.LastName, inv.InvoiceDate, inv.BillingCountry
FROM invoices AS inv
JOIN customers AS cust
ON inv.CustomerId=cust.CustomerId
WHERE cust.Country='Brazil'
ORDER BY inv.InvoiceDate asc;

--7. Show the Employees who are Sales Agents.

SELECT LastName, FirstName, Title
FROM employees 
WHERE Title='Sales Support Agent'

--8. Find a unique/distinct list of billing countries from the Invoice table.

SELECT Distinct BillingCountry
FROM invoices

--9. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT emp.LastName, emp.FirstName, inv.InvoiceId
FROM invoices AS inv
JOIN customers AS cust ON inv.CustomerId = cust.CustomerId
JOIN employees AS emp ON cust.SupportRepId = emp.EmployeeId
WHERE emp.Title = 'Sales Support Agent';

--10. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT inv.Total AS invoicetotal, cust.LastName AS custlastname, cust.FirstName AS custfirstname, cust.Country, emp.LastName AS SalesAgentLastName, emp.FirstName AS SalesAgentFirstName
FROM invoices AS inv
JOIN customers AS cust
ON inv.CustomerId=cust.CustomerId

JOIN employees AS emp
ON emp.EmployeeId=cust.SupportRepID

--11. How many Invoices were there in 2009?

SELECT COUNT (*) 
FROM invoices
WHERE InvoiceDate LIKE '%2009%'

--12. What are the total sales for 2009?

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate LIKE '%2009%'

--13. Write a query that includes the purchased track name with each invoice line ID.

SELECT invoice_items.InvoiceLineID, tracks.Name
FROM tracks
JOIN invoice_items
ON tracks.TrackId=invoice_items.TrackId
ORDER BY InvoiceLineID asc

--14. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT inv.InvoiceLineId, tracks.Name AS trackname, artists.Name AS artistname
FROM invoice_items AS inv
JOIN tracks ON inv.TrackId = tracks.TrackId
JOIN albums ON tracks.AlbumId = albums.AlbumId
JOIN artists ON albums.ArtistId = artists.ArtistId
ORDER BY inv.InvoiceLineID;

--15. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT tracks.Name AS Trackname, albums.Title AS Albumname, genres.Name AS genre, media_types.Name AS mediatype
FROM tracks
JOIN albums
ON tracks.AlbumId=albums.AlbumId

JOIN media_types 
ON tracks.MediaTypeId=media_types.MediaTypeId

JOIN genres
ON tracks.GenreId=genres.GenreId

ORDER BY Trackname

--16. Show the total sales made by each sales agent.

SELECT SUM(invoices.Total) AS invoicetotal, employees.LastName AS AgentLastName, employees.FirstName AS AgentFirstName 
FROM invoices
JOIN customers
ON invoices.CustomerId=customers.CustomerId

JOIN employees
ON customers.SupportRepId=employees.EmployeeId

GROUP BY AgentLastName, AgentFirstName

ORDER BY InvoiceTotal


--17. Which sales agent made the most dollars in sales in 2009?

SELECT employees.LastName AS AgentLastName, employees.FirstName AS AgentFirstName, SUM(invoices.Total) AS TotalSales, MAX(invoices.InvoiceDate) AS LatestInvoiceDate
FROM employees
JOIN customers
ON employees.EmployeeId=customers.SupportRepId

JOIN invoices
ON customers.CustomerId=invoices.CustomerId

WHERE InvoiceDate LIKE '%2009%'

GROUP BY AgentLastName, AgentFirstName

ORDER BY TotalSales desc

LIMIT 1

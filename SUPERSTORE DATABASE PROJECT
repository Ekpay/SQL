#This project uses the following superstore data:

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

#1. Write a SQL Query that ORDERS ITEMS by PRICE.

select item_id, item_name, price -- Items and price must be selected.
from superstore 
where item_id -- WHERE statement indicates that I am filtering for item_id.
order by price -- ORDER BY statement sorts the result set for price. 
;

#2. Write a SQL Query that shows a STATISTIC about the ITEM PRICES (SUM, MAXIMUM, MINIMUM, AVERAGE, AND COUNT).

-- What is the sum of all items in the store?

select sum(price) --Sum aggregate function will return the total for price.
from superstore
;

-- What is the name of the most expensive item in the store?

SELECT item_name, price -- Outer query where price matches the highest value.
FROM superstore
WHERE price = (SELECT MAX(price) FROM superstore) -- Subquery retrieves highest price from the table.
;

-- What is the name of the least expensive item in the store?

select item_name, price 
from superstore
where price = (select MIN(price) from superstore) -- Subquery retrieves lowest price from the table.
;

-- What is the average stock quantity of all items in the superstore?

select avg(stock_quantity)
from superstore
;

-- How many individual departments does the superstore have to offer?

SELECT COUNT(DISTINCT category)  -- Count the number of UNIQUE departments in the superstore with distinct.
FROM superstore
;

#3. Write a SQL Query that shows a STATISTIC about the PRICE for ITEMS in the CATEGORY of KITCHEN SUPPLIES.

-- What is the most expensive kitchen item?

select item_name, price -- Need to display most expensive item name.
from superstore
where category = 'Kitchen Supplies' 
	and price = (select max(price) from superstore where category= 'Kitchen Supplies') -- subquery used to find the maximum price of items in the "Kitchen Supplies" category.
;

#4. What is the largest value of the price column across all items?

SELECT MAX(price)
FROM superstore
WHERE item_id
;
